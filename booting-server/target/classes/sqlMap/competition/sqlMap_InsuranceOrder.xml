<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="insuranceOrder" isRead="true" dsName="test-read">

	<sql id="insertInsuranceOrder" isRead="false" dsName="test-write">
		<![CDATA[
			INSERT INTO insurance_order(createTime, competitionId, ioId, orderGroupId) 
			values (:createTime, :competitionId, :ioId, :orderGroupId)
		]]>
	</sql>

	<sql id="updateInsuranceOrder" isRead="false" dsName="test-write">
		<![CDATA[
			UPDATE insurance_order SET createTime = :createTime
				<#if competitionId?exists && competitionId != "">
					, competitionId = :competitionId
				</#if>
				<#if orderGroupId?exists && orderGroupId != "">
					, orderGroupId = :orderGroupId
				</#if>
			WHERE ioId = :ioId
		]]>
	</sql>

	<sql id="deleteInsuranceOrder" isRead="false" dsName="test-write">
		<![CDATA[
			DELETE FROM insurance_order
			WHERE 1=1
			<#if createTime?exists && createTime != "">
					AND createTime = :createTime
				</#if>
				<#if competitionId?exists && competitionId != "">
					AND competitionId = :competitionId
				</#if>
				<#if orderGroupId?exists && orderGroupId != "">
					AND orderGroupId = :orderGroupId
				</#if>
			<#if ioId?exists && ioId != "">
				AND ioId = :ioId
			</#if>
		]]>
	</sql>

	<sql id="getSimpleInsuranceOrderList">
		<![CDATA[
			SELECT 
				createTime, 
				competitionId, 
				ioId, 
				orderGroupId
			FROM insurance_order
			WHERE 1=1
			<#if createTime?exists && createTime != "">
					AND createTime = :createTime
				</#if>
				<#if competitionId?exists && competitionId != "">
					AND competitionId = :competitionId
				</#if>
				<#if orderGroupId?exists && orderGroupId != "">
					AND orderGroupId = :orderGroupId
				</#if>
			<#if ioId?exists && ioId != "">
				AND ioId = :ioId
			</#if>
			<#if orderBy?exists && orderBy !="" >
				ORDER BY :orderBy
				<#if orderType?exists && orderType !="" >
					:orderType
				</#if>
			</#if>
			<#if startIndex?exists && startIndex !="" && maxCount?exists && maxCount !="" >
				LIMIT :startIndex,:maxCount
			</#if>
		]]>
	</sql>

	<sql id="getSimpleInsuranceOrderListCount">
		<![CDATA[
			SELECT COUNT(1) FROM insurance_order
			WHERE 1=1
			<#if createTime?exists && createTime != "">
					AND createTime = :createTime
				</#if>
				<#if competitionId?exists && competitionId != "">
					AND competitionId = :competitionId
				</#if>
				<#if orderGroupId?exists && orderGroupId != "">
					AND orderGroupId = :orderGroupId
				</#if>
			<#if ioId?exists && ioId != "">
				AND ioId = :ioId
			</#if>
			<#if orderBy?exists && orderBy !="" >
				ORDER BY :orderBy
				<#if orderType?exists && orderType !="" >
					:orderType
				</#if>
			</#if>
		]]>
	</sql>

	<sql id="getInsuranceOrderList">
		<![CDATA[
			SELECT 
				createTime, 
				competitionId, 
				ioId, 
				orderGroupId
			FROM insurance_order
			WHERE 1=1
			<#if createTime?exists && createTime != "">
					AND createTime = :createTime
				</#if>
				<#if competitionId?exists && competitionId != "">
					AND competitionId = :competitionId
				</#if>
				<#if orderGroupId?exists && orderGroupId != "">
					AND orderGroupId = :orderGroupId
				</#if>
			<#if ioId?exists && ioId != "">
				AND ioId = :ioId
			</#if>
			<#if orderBy?exists && orderBy!="" && orderType?exists>
				ORDER BY :orderBy :orderType
			</#if>
			<#if startIndex?exists && startIndex !="" && maxCount?exists && maxCount !="" >
				LIMIT :startIndex,:maxCount
			</#if>
		]]>
	</sql>

	<sql id="getInsuranceOrderListCount">
		<![CDATA[
			SELECT COUNT(1) FROM insurance_order
			WHERE 1=1
			<#if createTime?exists && createTime != "">
					AND createTime = :createTime
				</#if>
				<#if competitionId?exists && competitionId != "">
					AND competitionId = :competitionId
				</#if>
				<#if orderGroupId?exists && orderGroupId != "">
					AND orderGroupId = :orderGroupId
				</#if>
			<#if ioId?exists && ioId != "">
				AND ioId = :ioId
			</#if>
			<#if orderBy?exists && orderBy!="" && orderType?exists>
				ORDER BY :orderBy :orderType
			</#if>
		]]>
	</sql>

</sqlMap>